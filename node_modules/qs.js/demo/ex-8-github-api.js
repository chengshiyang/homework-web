import qs from '../src/qs';
import $ from './query';
import request from 'superagent';


let input = $('#ex-8-github-search-input');
let searchResult = $('#ex-8-searchResult');


let inputStream = qs.fromEvents(input, 'keyup');

let valueStream = inputStream
    .debounce(100)
    .map(e => e.target.value.trim())
    .skipDuplicates()
    .onValue( (val) => console.log(val));


let searchStream = valueStream.flatMapLatest(search);

qs.merge([
    valueStream.map(renderLoading),
    searchStream.map(renderItems)
]).onValue( html => {
    searchResult.innerHTML = html;
}).onError(err => {
    searchResult.innerHTML = '搜索错误';
});

/* 搜索github*/
function search(keywords) {
    if (keywords.length > 0) {
        return qs(emitter => {
            request
            .get('https://api.github.com/search/repositories')
            .query({
                q: keywords,
                sort: 'stars',
                order: 'desc'
            })
            .end((err, res) => {
                if (err) {
                    return emitter.error('搜索失败');
                }
                emitter.emit(res.body.items);
            });
        }).toProperty();
    } else {
        return qs.constant([]);
    }
}

/* 渲染搜索结果列表 */
function renderItems(items) {
    return '<ul>' + items.map( item => `
        <li><a target="_blank" href="${item.html_url}"> ${item.full_name}</a> (${item.stargazers_count})</li>
    `).join('') + '</ul>';
}


/* 渲染搜索中 loading */

function renderLoading() {
    return '搜索中...';
}



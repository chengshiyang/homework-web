import {createStreamConstructor, createPropertyConstructor} from './common';

const mixin = {
    init({size}) {
        this.size = size;
        this._window = [];
    },

    _free() {
        this._window = null;
    },

    _handleValue(x) {
        let win = this._window;
        win.push(x);
        const winLen = win.length;
        if (winLen === this.size) {
            this.emitValue(win.slice(winLen - this.size, winLen));
            win.shift();
        }
    }
};


const WindowStream = createStreamConstructor('filter', mixin);
const WindowProperty = createPropertyConstructor('filter', mixin);


function window(source, fn) {
    return new (source._ofSameType(WindowStream, WindowProperty))(source, {fn});
}

export default window;

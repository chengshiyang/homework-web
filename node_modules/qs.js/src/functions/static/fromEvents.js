import Stream from '../../Stream';

const pairs = [
    ['addEventListener', 'removeEventListener'],
    ['addListener', 'removeListener'],
    ['on', 'off']
];

function fromSubUnsub(sub, unsub) {
    return new Stream(function(emitter) {
        let handler = x => emitter.emit(x);

        sub(handler);
        return () => unsub(handler);
    });
}

export default function fromEvents(el, eventName) {
    let sub, unsub;
    for (let i = 0; i < pairs.length; i++) {
        if (typeof el[pairs[i][0]] === 'function' && typeof el[pairs[i][1]] === 'function') {
            sub = pairs[i][0];
            unsub = pairs[i][1];
            break;
        }
    }

    if (sub === undefined) {
        throw new Error('el上没有监听事件的方法');
    }
    return fromSubUnsub(
        (handler) => el[sub](eventName, handler),
        (handler) => el[unsub](eventName, handler)
    );
};

import {createStreamConstructor, createPropertyConstructor} from './common';

const mixin = {
    init({fn}) {
        this._fn = fn;
    },

    _handleValue(x) {
        if (this._fn(x)) {
            this.emitValue(x);
        } else {
            this.emitEnd();
        }
    }

};

const TakeWhileStream = createStreamConstructor('takeWhile', mixin);
const TakeWhileProperty = createPropertyConstructor('takeWhile', mixin);


function takeWhile(source, fn) {
    return new (source._ofSameType(TakeWhileStream, TakeWhileProperty))(source, {fn});
}


export default takeWhile;
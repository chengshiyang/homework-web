import {createStreamConstructor, createPropertyConstructor} from './common';
import {M_NULL } from '../constants/common';
const equal = (a,b) => a === b;

const mixin = {
    init({fn}) {
        this._pv = M_NULL;
        this._fn = fn;
    },

    _free() {
        this._pv = null;
        this._fn = null;
    },

    _handleValue(x) {
        if (this._pv === M_NULL || !this._fn(this._pv, x)) {
            this._pv = x;
            this.emitValue(x);
        }
    }
};

const S = createStreamConstructor('skipDuplicates', mixin);
const P = createPropertyConstructor('skipDuplicates', mixin);

export default function skipDuplicates(source, fn = equal) {
    return new (source._ofSameType(S, P))(source, {fn});
}
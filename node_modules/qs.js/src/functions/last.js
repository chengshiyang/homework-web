import {createStreamConstructor, createPropertyConstructor} from './common';
import {M_NULL} from '../constants/common';


const mixin = {
    init() {
        this._lastValue = M_NULL;
    },

    _free() {
        this._lastValue = null;
    },

    _handleValue(val) {
        this._lastValue = val;
    },

    _handleEnd() {
        if (this._lastValue !== M_NULL) {
            this.emitValue(this._lastValue);
        }
        this.emitEnd();
    }

};

const S = createStreamConstructor('last', mixin);
const P = createPropertyConstructor('last', mixin);


function last(source) {
    return new (source._ofSameType(S, P))(source);
}



export default last;

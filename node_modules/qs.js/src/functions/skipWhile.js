import {createStreamConstructor, createPropertyConstructor} from './common';



const mixin = {
    init({fn}) {
        this._fn = fn;
        this._preventEmit = true;
    },

    _free() {
        this._fn = null;
    },

    _handleValue(x) {
        if (this._preventEmit === true) {
            this._preventEmit = this._fn(x);
        }
        if (this._preventEmit === false) {
            this.emitValue(x);
        }
    }
};

const SkipWhileStream = createStreamConstructor('skipWhile', mixin);
const SkipWhileProperty = createPropertyConstructor('skipWhile', mixin);

function skipWhile(source, fn) {
    return new (source._ofSameType(SkipWhileStream, SkipWhileProperty))(source, {fn});
}

export default skipWhile;

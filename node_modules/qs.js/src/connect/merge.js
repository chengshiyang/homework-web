import Stream from '../Stream';
import extend from '../polyfill/extend';
import never from '../functions/never';
import {VALUE, ANY, END} from '../constants/events';
import {forEach, concat, findBy, remove} from '../polyfill/list';
import Common from './common';



function Merge(obs) {
    Common.call(this);
    this._addAll(obs);
}

Merge.prototype = Object.create(Common.prototype);

extend(Merge.prototype, {
    _name: 'merge',

    _onEnd: function () {
        this.emitEnd();
    }
});

module.exports = function merge(obs) {
    return obs.length === 0 ? never() : new Merge(obs);
};
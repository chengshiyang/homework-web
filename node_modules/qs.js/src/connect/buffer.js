import {createStream, createProperty} from './connectTwoSource';


const mixins = {

    init() {
        this._buff = [];
    },

    _free() {
        this._buff = null;
    },

    _flush() {
        if (this._buff) {
            this.emitValue(this._buff);
            this._buff = [];
        }
    },


    _onActivation() {
        this._mainOb.onAny(this._$handleMainAny);
        if (this.state.alive && this._secondaryOb) {
            this._secondaryOb.onAny(this._$handleSecondaryAny);
        }
    },

    _handleMainValue(v) {
        this._buff.push(v);
    },

    _handleMainEnd() {
        this._flush();
        this.emitEnd();
    },


    _handleSecondaryValue(v) {
        this._flush();
    },

    _handleSecondaryError(err) {
        this.emitError(err);
    }
};


const P = createProperty('buffer', mixins);
const S = createStream('buffer', mixins);

export default function buffer(mainOb, secondaryOb, options) {
    return new (mainOb._ofSameType(S, P))(mainOb, secondaryOb, options);
}
